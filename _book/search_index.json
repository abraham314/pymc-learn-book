[
["index.html", "Practical Probabilistic Machine Learning with Python Welcome How to Get the Book Author", " Practical Probabilistic Machine Learning with Python Daniel Emaasit 2018-10-21 Welcome This is the online version of the book: Practical Probabilistic Machine Learning with Python. Pull requests and general comments are welcome. Practical Probabilistic Machine Learning with Python is (e.g. ???), data science (e.g. ???) and package development (e.g. ???). How to Get the Book To build the book: Install the latest version of R If you are using RStudio, make sure thatâ€™s up-to-date as well Install the book dependencies. # Make sure you are using the latest version of `devtools` # Older versions do not work. devtools::install_github(&quot;pymc-learn/pymc-learn-book&quot;) Clone the pymc-learn-book repo If you are using RStudio, open index.Rmd and click Knit. Alternatively, use the bundled Makefile Author Daniel Emaasit is a Data Scientist at Haystax Technology. His interests involve developing principled probabilistic models for problems where training data are scarce by leveraging knowledge from subject-matter experts and context information. In particular, he is interested in flexible probabilistic machine learning methods, such as Gaussian processes and Dirichlet processes, and data-efficient learning methods such as Bayesian optimization &amp; Model-based Reinforcement Learning. He is also a Ph.D. Candidate of Transportation Engineering at UNLV where his research in nonparametric Bayesian methods is focused on developing flexible-statistical models for traveler-behavior analytics. This work is licensed under the Creative Commons Attribution-NonCommercial-NoDerivs 3.0 United States License. "],
["preface.html", "Preface", " Preface Practical Probabilistic Machine Learning with Python is (e.g. ???), data science (e.g. ???) and package development (e.g. ???). "],
["intro.html", "1 Introduction", " 1 Introduction You can label chapter and section titles using {#label} after them, e.g., we can reference Chapter 1. If you do not manually label them, there will be automatic labels anyway, e.g., Chapter ??. Figures and tables with captions will be placed in figure and table environments, respectively. par(mar = c(4, 4, .1, .1)) plot(pressure, type = &#39;b&#39;, pch = 19) Figure 1.1: Here is a nice figure! Reference a figure by its code chunk label with the fig: prefix, e.g., see Figure 1.1. Similarly, you can reference tables generated from knitr::kable(), e.g., see Table 1.1. knitr::kable(head(iris, 20), caption = &#39;Here is a nice table!&#39;, booktabs = TRUE) Table 1.1: Here is a nice table! Sepal.Length Sepal.Width Petal.Length Petal.Width Species 5.1 3.5 1.4 0.2 setosa 4.9 3.0 1.4 0.2 setosa 4.7 3.2 1.3 0.2 setosa 4.6 3.1 1.5 0.2 setosa 5.0 3.6 1.4 0.2 setosa 5.4 3.9 1.7 0.4 setosa 4.6 3.4 1.4 0.3 setosa 5.0 3.4 1.5 0.2 setosa 4.4 2.9 1.4 0.2 setosa 4.9 3.1 1.5 0.1 setosa 5.4 3.7 1.5 0.2 setosa 4.8 3.4 1.6 0.2 setosa 4.8 3.0 1.4 0.1 setosa 4.3 3.0 1.1 0.1 setosa 5.8 4.0 1.2 0.2 setosa 5.7 4.4 1.5 0.4 setosa 5.4 3.9 1.3 0.4 setosa 5.1 3.5 1.4 0.3 setosa 5.7 3.8 1.7 0.3 setosa 5.1 3.8 1.5 0.3 setosa You can write citations, too. For example, we are using the bookdown package (Xie 2017) in this sample book, which was built on top of R Markdown and knitr (Xie 2015). References "],
["before-we-start-the-mathematics-of-probilistic-machine-learning.html", "3 Before We Start: The Mathematics of Probilistic Machine Learning", " 3 Before We Start: The Mathematics of Probilistic Machine Learning We describe our methods in this chapter. "],
["generative-modeling.html", "6 Generative Modeling", " 6 Generative Modeling We have finished a nice book. "],
["references.html", "11 References", " 11 References "]
]
